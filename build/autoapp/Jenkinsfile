
pipeline {
    agent any

    environment {
        ARTEFACT_NAME = "${WORKSPACE}/target/WebGoat-${BUILD_VERSION}.war"
        CREDS = 'admin'
        IQ_ORGANISATION = "${JOB_NAME}".substring(0, "${JOB_NAME}".indexOf('/'))
        IQ_APPLICATION = ("${JOB_NAME}".substring("${JOB_NAME}".indexOf('/')+1)).replaceAll(~/\//, "_")
        //IQ_APPLICATION = "${IQ_APPLICATION}".replaceAll(~/\//, "_")
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -Dproject.version=${BUILD_VERSION} -Dmaven.test.failure.ignore clean package'
            }
            post {
                success {
                    echo 'Now archiving...'
                    archiveArtifacts artifacts: "**/target/*.war"
                }
            }
        }

        stage('IQ Application Configuration'){
            steps {
                build job: 'IQ_Application_Setup', parameters: [string(name: 'IQ_ORGANISATION', value: "${IQ_ORGANISATION}"), string(name: "IQ_APPLICATION", value: "${IQ_APPLICATION}")]
            }
        }

        // stage('Nexus IQ Scan'){
        //     steps {
        //         script{

        //             try {
        //                 def response = sh returnStdout: true, script: 'curl -u admin:admin123 -X GET http://localhost:8070/api/v2/applications?publicId=Autoapps_Build-Auto-pp'
        //                 echo "${response}"
        //             }
        //             catch (error) {
        //                 throw error
        //             }

                
        //             try {
        //                 def policyEvaluation = nexusPolicyEvaluation failBuildOnNetworkError: true, iqApplication: "${IQ_APPLICATION}", iqScanPatterns: [[scanPattern: '**/*.war']], iqStage: "${IQ_STAGE}", jobCredentialsId: "${CREDS}"
        //                 echo "Nexus IQ scan succeeded: ${policyEvaluation.applicationCompositionReportUrl}"
        //                 IQ_SCAN_URL = "${policyEvaluation.applicationCompositionReportUrl}"
        //             } 
        //             catch (error) {
        //                 def policyEvaluation = error.policyEvaluation
        //                 echo "Nexus IQ scan vulnerabilities detected', ${policyEvaluation.applicationCompositionReportUrl}"
        //                 throw error
        //             }
        //         }
        //     }
        // }
    }
}

